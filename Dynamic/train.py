import pickle
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics

top_n = 200
top_n += 1

# Import Benign Feature list
benign_features = np.array(pd.read_csv('Features\\benign.csv'))
y_benign = benign_features[:, [0]]
X_benign = benign_features[:, 1:top_n]

# Import Malware Feature list
malware_features = np.array(pd.read_csv('Features\\malware.csv'))
y_malware = malware_features[:, [0]]
X_malware = malware_features[:, 1:top_n]

# Merge benign and malware feature list representation
X = np.concatenate((X_benign, X_malware))
y = np.concatenate((y_benign, y_malware))[:, 0]

for i in range(5):
    # Split data into train/test
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

    # Random Forest Classifier
    clf2 = RandomForestClassifier(n_estimators=10)
    clf2.fit(X_train, y_train)

    # Save Model
    # filename = 'Constants\dynamic.jd'
    # pickle.dump(clf2, open(filename, 'wb'))

    y_pred = clf2.predict(X_test)

    accuracy = metrics.accuracy_score(y_test, y_pred)
    precision = metrics.precision_score(y_test, y_pred, average='binary')
    recall = metrics.recall_score(y_test, y_pred, average='binary')
    score = metrics.f1_score(y_test, y_pred, average='binary')

    print("Accuracy:", accuracy)
    print("Precision:", precision)
    print("Recall:", recall)
    print("Score:", score)
    print('\n')


# Random Forest Classifier
clf = RandomForestClassifier(n_estimators=10)
clf.fit(X, y)

# Save Model
filename = 'Constants\dynamic.jd'
pickle.dump(clf, open(filename, 'wb'))

'''
Accuracy: 0.98984375
Precision: 0.9968178202068417
Recall: 0.9827450980392157
Score: 0.9897314375987363
'''
