import os
import pickle

import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.feature_selection import SelectFromModel
from sklearn import metrics


def remove_csv_files():
    current_dir = os.getcwd()
    file_list = [f for f in os.listdir(current_dir + '\\Features') if f.endswith(".csv")]
    for f in file_list:
        if 'Diff' in f:
            os.remove(os.path.join(current_dir + '\\Features', f))


# Import Benign Feature list
features = np.array(pd.read_csv('Features\\Features.csv'))
top_n = 950
top_n += (35 + 1)
# features = features[:, 1:top_n]
y = features[:, 0]
X = features[:, 1:top_n]
# X = np.delete(features, 0, axis=1)

# fsel = ExtraTreesClassifier().fit(X, y)
# model = SelectFromModel(fsel, prefit=True)
# X_new = model.transform(X)
# X = X_new

remove_csv_files()
'''
number = 0
for i in range(5):
    # Split data into train/test
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)

    # Random Forest Classifier
    clf2 = RandomForestClassifier(n_estimators=50)
    clf2.fit(X_train, np.array(y_train))
    # clf2.fit(X, np.array(y))

    # # Save Model
    # filename = 'Constants\static.jd'
    # pickle.dump(clf2, open(filename, 'wb'))
    #
    # # Retrieve Model
    # model_name = 'Constants\static.jd'
    # loaded_model = pickle.load(open(model_name, 'rb'))

    y_pred = clf2.predict(X_test)

    accuracy = metrics.accuracy_score(y_test, y_pred)
    precision = metrics.precision_score(y_test, y_pred)
    recall = metrics.recall_score(y_test, y_pred)
    score = metrics.f1_score(y_test, y_pred)

    iter = 0
    file = open('Features\\Diff' + str(number) + '.csv', 'a')
    for iter in range(len(y_pred)):
        if y_pred[iter] != y_test[iter]:
            file.write(str(iter) + ',' + str(y_test[iter]) + ',' + str(y_pred[iter]) + '\n')
    file.close()
    number += 1
    print("Accuracy:", accuracy)
    print("Precision:", precision)
    print("Recall:", recall)
    print("f1Score:", score)
    print('\n')
'''

# Random Forest Classifier
clf = RandomForestClassifier(n_estimators=50)
clf.fit(X, np.array(y))
# clf.fit(X, np.array(y))

# Save Model
filename = 'Constants\static.jd'
pickle.dump(clf, open(filename, 'wb'))

'''
1001/250/0.25/ExtraTrees
Accuracy: 0.972265625
Precision: 0.9759036144578314
Recall: 0.9910588235294118
f1Score: 0.9834228344618259

501/150/0.25/ExtraTrees
Accuracy: 0.972265625
Precision: 0.9760450915922968
Recall: 0.990467111534795
f1Score: 0.983203217411876

Best Till NOW!!
501/150/0.25/Simple
Accuracy: 0.971484375
Precision: 0.9755063589260481
Recall: 0.989961759082218
f1Score: 0.9826809015421115
'''
